-----------------------------------------------------------
- 1) Generate Test Data from PRNG source                  -
- 2) Calculate SHA256 HASH and obtain known good result   -
- 3) Use test data for DUT testing                        -
- 4) Read Hash from DUT and compare known good result     -
-----------------------------------------------------------

SHA256 Constants for M:
-----------------------
Set Byte Count = 5 
Word Range = W[0:1] 
Last Byte Location = Msg Block[1], Word[1], Byte[0] 
Message Block Range M[0:1] 
Message bit count = 40 (0x00000028) 

Message Data Set M:
-------------------
 091a2b3c   048d159e  
-----------------

MESSAGE M[0]: 
----------------
 091a2b3c   048d159e  

MESSAGE SCHEDULE FOR M[0]:  
------------------------------
 091a2b3c   04800000   00000000   00000000   00000000   00000000   00000000   00000000  
 00000000   00000000   00000000   00000000   00000000   00000000   00000000   00000028  
 09b32c5c   04910000   f3a7e924   a001269a   098a0e5d   b7b60449   46e7479f   cc332d08  
 4fbef27e   e6be5c78   4764282e   ef14ce7c   48b9369d   45b176fa   d9cc5013   57a3fa98  
 d34a70c3   7bda8028   c1f0878e   317f3922   a6ce0baa   f4f24d7f   2671276a   58a20683  
 fcefccfd   4aa0b056   706566ff   623724de   feebb0e1   0b9df3c9   a5befe28   9e323981  
 be6a46e3   6c7598fa   1baf73de   736345a6   7c2674fa   fe84c9f2   45a6abea   2c602843  
 73d32f86   20c6c9f5   4facc25c   cc427e68   e67d875f   bc859a3f   e436fbca   d185e586  

HASH CALCULATION FOR M[0]:   
-------------------------------
HASH[0]:  394a0f31
HASH[1]:  a15d2f06
HASH[2]:  9272c097
HASH[3]:  2dcbb2d9
HASH[4]:  f65119b5
HASH[5]:  b63d3121
HASH[6]:  51c27417
HASH[7]:  9da0cd83



SHA256 Hash Calculation for M:
------------------------------
HASH[0] = 394a0f31
HASH[1] = a15d2f06
HASH[2] = 9272c097
HASH[3] = 2dcbb2d9
HASH[4] = f65119b5
HASH[5] = b63d3121
HASH[6] = 51c27417
HASH[7] = 9da0cd83


----------------------------------------
   ----->   BEGIN: RTL TESTING  <-----  
----------------------------------------

Write message and message size to DUT...

-> MESSAGE WRITTEN TO DUT RAM: 2 words [0:1] @(42.320 us)

-> MESSAGE SIZE SENT: 5 bytes [0:4] @(42.480 us)

-> START BIT WRITTEN TO DUT COMMAND REG. @(42.500 us)

-> HASH_PROC_GO ASSERTED @(42.581 us)

Message schedule block 0 Actual vs Expected
---------------------------------------------
OK: MSG BLK [0], MSG SCH RAM[0] = 091a2b3c 
OK: MSG BLK [0], MSG SCH RAM[1] = 04800000 
OK: MSG BLK [0], MSG SCH RAM[2] = 00000000 
OK: MSG BLK [0], MSG SCH RAM[3] = 00000000 
OK: MSG BLK [0], MSG SCH RAM[4] = 00000000 
OK: MSG BLK [0], MSG SCH RAM[5] = 00000000 
OK: MSG BLK [0], MSG SCH RAM[6] = 00000000 
OK: MSG BLK [0], MSG SCH RAM[7] = 00000000 
OK: MSG BLK [0], MSG SCH RAM[8] = 00000000 
OK: MSG BLK [0], MSG SCH RAM[9] = 00000000 
OK: MSG BLK [0], MSG SCH RAM[10] = 00000000 
OK: MSG BLK [0], MSG SCH RAM[11] = 00000000 
OK: MSG BLK [0], MSG SCH RAM[12] = 00000000 
OK: MSG BLK [0], MSG SCH RAM[13] = 00000000 
OK: MSG BLK [0], MSG SCH RAM[14] = 00000000 
OK: MSG BLK [0], MSG SCH RAM[15] = 00000028 
OK: MSG BLK [0], MSG SCH RAM[16] = 09b32c5c 
OK: MSG BLK [0], MSG SCH RAM[17] = 04910000 
OK: MSG BLK [0], MSG SCH RAM[18] = f3a7e924 
OK: MSG BLK [0], MSG SCH RAM[19] = a001269a 
OK: MSG BLK [0], MSG SCH RAM[20] = 098a0e5d 
OK: MSG BLK [0], MSG SCH RAM[21] = b7b60449 
OK: MSG BLK [0], MSG SCH RAM[22] = 46e7479f 
OK: MSG BLK [0], MSG SCH RAM[23] = cc332d08 
OK: MSG BLK [0], MSG SCH RAM[24] = 4fbef27e 
OK: MSG BLK [0], MSG SCH RAM[25] = e6be5c78 
OK: MSG BLK [0], MSG SCH RAM[26] = 4764282e 
OK: MSG BLK [0], MSG SCH RAM[27] = ef14ce7c 
OK: MSG BLK [0], MSG SCH RAM[28] = 48b9369d 
OK: MSG BLK [0], MSG SCH RAM[29] = 45b176fa 
OK: MSG BLK [0], MSG SCH RAM[30] = d9cc5013 
OK: MSG BLK [0], MSG SCH RAM[31] = 57a3fa98 
OK: MSG BLK [0], MSG SCH RAM[32] = d34a70c3 
OK: MSG BLK [0], MSG SCH RAM[33] = 7bda8028 
OK: MSG BLK [0], MSG SCH RAM[34] = c1f0878e 
OK: MSG BLK [0], MSG SCH RAM[35] = 317f3922 
OK: MSG BLK [0], MSG SCH RAM[36] = a6ce0baa 
OK: MSG BLK [0], MSG SCH RAM[37] = f4f24d7f 
OK: MSG BLK [0], MSG SCH RAM[38] = 2671276a 
OK: MSG BLK [0], MSG SCH RAM[39] = 58a20683 
OK: MSG BLK [0], MSG SCH RAM[40] = fcefccfd 
OK: MSG BLK [0], MSG SCH RAM[41] = 4aa0b056 
OK: MSG BLK [0], MSG SCH RAM[42] = 706566ff 
OK: MSG BLK [0], MSG SCH RAM[43] = 623724de 
OK: MSG BLK [0], MSG SCH RAM[44] = feebb0e1 
OK: MSG BLK [0], MSG SCH RAM[45] = 0b9df3c9 
OK: MSG BLK [0], MSG SCH RAM[46] = a5befe28 
OK: MSG BLK [0], MSG SCH RAM[47] = 9e323981 
OK: MSG BLK [0], MSG SCH RAM[48] = be6a46e3 
OK: MSG BLK [0], MSG SCH RAM[49] = 6c7598fa 
OK: MSG BLK [0], MSG SCH RAM[50] = 1baf73de 
OK: MSG BLK [0], MSG SCH RAM[51] = 736345a6 
OK: MSG BLK [0], MSG SCH RAM[52] = 7c2674fa 
OK: MSG BLK [0], MSG SCH RAM[53] = fe84c9f2 
OK: MSG BLK [0], MSG SCH RAM[54] = 45a6abea 
OK: MSG BLK [0], MSG SCH RAM[55] = 2c602843 
OK: MSG BLK [0], MSG SCH RAM[56] = 73d32f86 
OK: MSG BLK [0], MSG SCH RAM[57] = 20c6c9f5 
OK: MSG BLK [0], MSG SCH RAM[58] = 4facc25c 
OK: MSG BLK [0], MSG SCH RAM[59] = cc427e68 
OK: MSG BLK [0], MSG SCH RAM[60] = e67d875f 
OK: MSG BLK [0], MSG SCH RAM[61] = bc859a3f 
OK: MSG BLK [0], MSG SCH RAM[62] = e436fbca 
OK: MSG BLK [0], MSG SCH RAM[63] = d185e586 

Message schedule block 0 Actual vs Expected
---------------------------------------------
OK: HASH[0], = 6a09e667 
OK: HASH[1], = bb67ae85 
OK: HASH[2], = 3c6ef372 
OK: HASH[3], = a54ff53a 
OK: HASH[4], = 510e527f 
OK: HASH[5], = 9b05688c 
OK: HASH[6], = 1f83d9ab 
OK: HASH[7], = 5be0cd19 

DUT MESSAGE METADATA @(50.340 us)
--------------------------------------
DUT Message Bit Length           = (HEX: 0x00028) 
DUT LAST BYTE/LAST WORD POSITION = (BIN: b00)  
DUT NUMBER OF BLOCKS IN MESSAGE  = (BIN: b00)  

READ HASH RESULT VIA AVALON BUS
-------------------------------
HASH[1]  ADDR: 0x00000000 :  0x394a0f31    
HASH[2]  ADDR: 0x00000004 :  0xa15d2f06    
HASH[3]  ADDR: 0x00000008 :  0x9272c097    
HASH[4]  ADDR: 0x0000000c :  0x2dcbb2d9    
HASH[5]  ADDR: 0x00000010 :  0xf65119b5    
HASH[6]  ADDR: 0x00000014 :  0xb63d3121    
HASH[7]  ADDR: 0x00000018 :  0x51c27417    
HASH[8]  ADDR: 0x0000001c :  0x9da0cd83    

MESSAGE BYTE COUNT: 0x00000005 (5) 


DUT SHA256 Results  @(52.500 us)       
---------------------------------

Test Bench Hash Result (SW Calculated):
---------------------------------------
TB Hash[0] = 0x394a0f31
TB Hash[1] = 0xa15d2f06
TB Hash[2] = 0x9272c097
TB Hash[3] = 0x2dcbb2d9
TB Hash[4] = 0xf65119b5
TB Hash[5] = 0xb63d3121
TB Hash[6] = 0x51c27417
TB Hash[7] = 0x9da0cd83

DUT Hash Result (Avalon Bus):
-----------------------------
DUT Hash[0] = 0x394a0f31
DUT Hash[1] = 0xa15d2f06
DUT Hash[2] = 0x9272c097
DUT Hash[3] = 0x2dcbb2d9
DUT Hash[4] = 0xf65119b5
DUT Hash[5] = 0xb63d3121
DUT Hash[6] = 0x51c27417
DUT Hash[7] = 0x9da0cd83

DUT Hash Result (probe):
------------------------
DUT Memory Array Hash[0] = 0x394a0f31
DUT Memory Array Hash[1] = 0xa15d2f06
DUT Memory Array Hash[2] = 0x9272c097
DUT Memory Array Hash[3] = 0x2dcbb2d9
DUT Memory Array Hash[4] = 0xf65119b5
DUT Memory Array Hash[5] = 0xb63d3121
DUT Memory Array Hash[6] = 0x51c27417
DUT Memory Array Hash[7] = 0x9da0cd83

Hash Result Comparison:
-----------------------
Hash[0] = 0x394a0f31 - OK
Hash[1] = 0xa15d2f06 - OK
Hash[2] = 0x9272c097 - OK
Hash[3] = 0x2dcbb2d9 - OK
Hash[4] = 0xf65119b5 - OK
Hash[5] = 0xb63d3121 - OK
Hash[6] = 0x51c27417 - OK
Hash[7] = 0x9da0cd83 - OK

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
                END TEST                 
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
